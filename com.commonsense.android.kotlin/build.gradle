apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "jacoco"

jacoco {
    toolVersion "0.7.9"
}

android {
    defaultPublishConfig "release"
    publishNonDefault true

    compileSdkVersion 26
    buildToolsVersion "26.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorSelection 'helpers', 'all'
    }

    dataBinding {
        enabled true
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Specifies a flavor dimension.
    flavorDimensions "helpers"
    productFlavors {
        all {
            // Assigns this product flavor to the 'color' flavor dimension.
            // This step is optional if you are using only one dimension.
            dimension "helpers"
        }

        none {
            dimension "helpers"
        }
    }


    lintOptions {
        xmlReport true
        xmlOutput = new File("lint-results.xml")
    }
    configurations {
        kapt
        debug
        release
    }

    testOptions.unitTests.all {
        testLogging {
            events "failed", "skipped"
            showStackTraces = true
            exceptionFormat = "full"
        }
        maxParallelForks = 20
        forkEvery = 1
    }


}


kotlin { experimental { coroutines "enable" } }

def supportVersion = "26.0.+"
def coroutinesVersion = "0.16"
def leakCanaryVersion = "1.5.1"

dependencies {
    //------------ Main libs --------------------
    //support libs
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:exifinterface:$supportVersion"
    //kotlin specific libs.
    kapt "com.android.databinding:compiler:3.0.0-alpha7"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //coroutines libs
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    //leak canary libs
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    //------------ Test libs --------------------
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
//        testImplementation "org.robolectric:robolectric:3.3.2"
    testImplementation 'org.robolectric:robolectric:3.4-SNAPSHOT'
    testImplementation project(":com.commonsense.android.kotlin-test")

    implementation project(":com.commonsense.android.kotlin-base")

}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://maven.google.com" }
}


android.libraryVariants.all { variant ->
    variant.variantData.variantConfiguration.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
    variant.variantData.variantConfiguration.
            javaCompileOptions.annotationProcessorOptions.className 'com.android.databinding.compiler'

}

apply from: "../resourcegroups.gradle"