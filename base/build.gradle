apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion androidSdkBuildVersion

    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdk
        targetSdkVersion project.targetSdk
        versionCode project.commonsenseVersionNumber
        versionName project.commonsenseVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
//            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            forkEvery = 2
        }
//        junitPlatform {
//            jacocoOptions {
//                taskGenerationEnabled = true
//                xml {
//                    enabled true
//                }
//                html {
//                    enabled true
//                }
//                csv {
//                    enabled true
//                }
//            }
//        }
    }

}


dependencies {
    //tests
    testImplementation project(':test')

    //coroutines libs
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

/*apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library)

publish {
    userOrg = project.commonsenseUserOrg
    groupId = project.commonsenseGroupId
    publishVersion = project.commonsenseVersionName
    repoName = project.commonsenseRepoName
    website = project.commonsenseWebsite
    artifactId = 'base'
    desc = 'Base android features'
}
*/
apply from: "../javadocSourceDokka.gradle"
apply from: "publish.gradle"
//afterEvaluate {
//    tasks.find { task -> task.name.contains("UnitTestSources") }.finalizedBy copyTestClasses
//}
//task copyTestClasses(type: Copy) {
//    from "build/tmp/kotlin-classes/"
//    into "build/intermediates/classes/"
//}
//
//

apply from: "../fixKotlinCoverage.gradle"