apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${dokkaVersion}"
    }
}

android {
    compileSdkVersion androidSdkBuildVersion

    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdk
        targetSdkVersion project.targetSdk
        versionCode project.commonsenseVersionNumber
        versionName project.commonsenseVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            forkEvery = 2
        }
    }
}


dependencies {
    //tests
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation project(':test')

    //coroutines libs
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
repositories {
    mavenCentral()
}
kotlin {
    experimental {
        coroutines "enable"
    }
}

//apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library)
//
//publish {
//    userOrg = project.commonsenseUserOrg
//    groupId = project.commonsenseGroupId
//    publishVersion = project.commonsenseVersionName
//    repoName = project.commonsenseRepoName
//    website = project.commonsenseWebsite
//    artifactId = 'base'
//    desc = 'Base android features'
//}

apply from: "../javadocSourceDokka.gradle"

task findDuplicates {
    doLast {
        String findMe = 'BaseTypesKt'
        configurations.compile.files.each { file ->
            if (file.name.endsWith('.jar')) {
                def classMatches = zipTree(file).matching {
                    include findMe
                }.files
                if (!classMatches.empty) {
                    println "Found $findMe in $file ${classMatches.size()} time(s)"
                }
            }
        }
    }
}
