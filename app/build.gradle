apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'



android {
//    buildTypeMatching 'proguard', 'debug'

    compileSdkVersion androidSdkBuildVersion

    buildToolsVersion "$androidBuildToolsVersion"
    defaultConfig {
        applicationId "com.commonsense.androidkotlin.example"

        minSdkVersion project.minSdk
        targetSdkVersion project.targetSdk
        versionCode project.commonsenseVersionNumber
        versionName project.commonsenseVersionName

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        //flavorSelection 'sdkRequirements', 'fastDev'

    }

    dataBinding {
        enabled true
    }

    buildTypes {

//        proguard {
//            initWith debug
//            useProguard true
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//
//        }

        release {
            testCoverageEnabled = true
            //shrinkResources true
            //minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
//            testCoverageEnabled = true
//            minifyEnabled   true

            //useProguard false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    flavorDimensions "sdkRequirements"

    productFlavors {

        regular {
            minSdkVersion 16
            dimension "sdkRequirements"
        }

        fastDev {
            minSdkVersion 25
            dimension "sdkRequirements"
            resConfigs("en", "xxhdpi")
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        maxProcessCount 20
    }

}

dependencies {

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:exifinterface:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    //time libs
    implementation 'joda-time:joda-time:2.9.9'

    //support libs
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"

    //tests libs
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation "junit:junit:$junitVersion"
    //kotlin specific
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    //csense
    implementation project(':prebuilt')
    implementation project(':system')
    implementation project(':views')
    implementation project(':base')
    testImplementation project(':test')
    implementation project(path: ':tools')

    implementation "com.android.support:multidex:$multidexVersion"

//    kapt "com.android.databinding:compiler:$androidGradleVersion"

}

repositories {
    mavenCentral()
    maven {
        url "https://maven.google.com"
    }
}


apply from: "../resourcegroups.gradle"
kotlin {
    experimental {
        coroutines "enable"
    }
}
//
//kapt {
//    useBuildCache = true
////    mapDiagnosticLocations = true
//}
