apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"


buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${dokkaVersion}"
    }
}

android {
    compileSdkVersion androidSdkBuildVersion

    buildToolsVersion "$androidBuildToolsVersion"


    defaultConfig {
        minSdkVersion project.minSdk
        targetSdkVersion project.targetSdk
        versionCode project.commonsenseVersionNumber
        versionName project.commonsenseVersionName


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            forkEvery = 2
        }
    }
}



dependencies {

    //TESTS
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation project(':test')

    //coroutines libs
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    implementation project(':system')
    implementation project(':base')

    kapt "com.android.databinding:compiler:$androidGradleVersion"

    //support libs
    api "com.android.support:appcompat-v7:$supportVersion"
    api "com.android.support:design:$supportVersion"
    api "com.android.support:exifinterface:$supportVersion"
    api "com.android.support:recyclerview-v7:$supportVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

}
kotlin {
    experimental {
        coroutines "enable"
    }
}
/*
apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library)

publish {
    userOrg = project.commonsenseUserOrg
    groupId = project.commonsenseGroupId
    publishVersion = project.commonsenseVersionName
    repoName = project.commonsenseRepoName
    website = project.commonsenseWebsite
    artifactId = 'widgets'
    desc = 'views features'
}
*/
apply from: "../javadocSourceDokka.gradle"