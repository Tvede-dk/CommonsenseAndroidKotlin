class MultiDirRes implements Plugin<Project> {

    @Override
    void apply(final Project project) {
        if (!isAndroidProject(project)) {
            println("Not android based project, thus disabling plugin.")
            return
        }
        applyMultiSourceDir(project)
    }

    public static boolean isAndroidProject(final Project self) {
        return self.pluginManager.hasPlugin("com.android.application") || self.pluginManager.hasPlugin("com.android.library")
    }

    final def resDirs = ["anim",
                         "color",
                         "drawable",
                         "mipmap",
                         "drawable-hdpi",
                         "drawable-mdpi",
                         "drawable-xhdpi",
                         "drawable-xxhdpi",
                         "layout",
                         "values",]

    void applyMultiSourceDir(final Project project) {
        println("Multi res dir enabled for $project.name")


        project.android.sourceSets.each { it ->
            it.res.srcDirs = walkthoughRootResourceDirectory(it)
        }
    }

    private List<File> walkthoughRootResourceDirectory(final sourceSet) {
        final File rootResDir = sourceSet.res.srcDirs[0]
        final List<File> srcDirs = resDirs.collect { final String resourceDirectoryName ->
            walkSubDirectories(resourceDirectoryName, rootResDir)
        }.flatten()
        return srcDirs + [rootResDir]
    }

    private static final List<File> walkSubDirectories(final String dirName, final File rootResDir) {
        if (dirName == null || rootResDir == null) {
            return []
        }
        final File resDir = new File(rootResDir, dirName)
        final List<File> subLayoutDirs = []
        if (resDir.exists()) {
            resDir.eachDir {
                subLayoutDirs.add(it)
                println("\t - adding dir $it to category $dirName")
            }
        }
        return subLayoutDirs
    }
}

apply plugin: MultiDirRes